% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fzn_from_intervals.R
\name{fzn_from_intervals}
\alias{fzn_from_intervals}
\title{Generate Fuzzy Number from Sample Intervals}
\usage{
fzn(alpha,
           l,
           u,
           interp = c("approx", "spline", "step"))
}
\arguments{
\item{l}{A vector of the same length as \code{alpha} with the values of the lower
limits of the corresponding alpha-cuts. If \code{alpha} is a matrix with 3 rows,
\code{l} is ignored.}

\item{u}{A vector of the same length as \code{alpha} with the values of the upper
limits of the corresponding alpha-cuts. If \code{alpha} is a matrix with 3 rows,
\code{u} is ignored.}

\item{interp}{A string with the function or method used to interpolate new alpha-cuts. Choices
are "\code{approx}" (default), "\code{spline}" or "\code{step}". For "\code{approx}", it is
used the \code{approx} function with "\code{linear}" method. For "\code{spline}", it is used the
\code{spline} function with "\code{hyman}" method (monotone cubic spline using Hyman filtering).
For "\code{step}", it is used a step interpolation. In this case, the alpha-cut at level 1 is not relevant.}

\item{alpha}{A vector with the possibility values, a.k.a. alpha-cuts. It must start at
0 and end at 1, in ascending order. Alternatively, it can be a matrix of 3 rows in
which the first row is the alpha-cuts vector, the second row is the corresponding lower
limits vector and the third row is the corresponding upper limits vector. If \code{interp == "step"}
the alpha-cut at level 1 is not necessary and if it is not provided then it is automatically built.}
}
\value{
An object of class \code{fzn}.
}
\description{
This function creates an object of class \code{fzn}, which is a list
containing the alpha-cuts of the membership function, the lower and upper limits of the
corresponding alpha-cuts, and the interpolation method.
}
\examples{
l <- c(0.75,1.75)
u <- c(4.5,3.25)

nest_l <- c(1.5,1,2, 0.5)
nest_u <- c(3.5,4,3, 5)

fx <- fzn_from_intervals(l, u, nest_l, nest_u)
plot(fx)

}
